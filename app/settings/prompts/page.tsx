'use client';

import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Label } from '@/components/ui/label';
import { Badge } from '@/components/ui/badge';
import { CheckCircle, AlertCircle, Save, RotateCcw, Eye, EyeOff } from 'lucide-react';
import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';

const DEFAULT_PROMPTS = {
  measurement: `Du √§r en expert p√• Google Analytics 4 och Google Tag Manager. Analysera den tillhandah√•llna datan och ge SPECIFIKA, handlingsbara rekommendationer.

VIKTIGT: Var mycket specifik och konkret. Undvik generiska r√•d.

Fokusera p√•:
1. SPECIFIKA events som saknas (namnge exakt vilka)
2. EXAKTA konfigurationsfel (med specifika tag-namn)
3. KONKRETA f√∂rb√§ttringsm√∂jligheter (med specifika exempel)
4. SPECIFIKA datakvalitetsproblem (med exakta felmeddelanden)

Ge varje fynd:
- SPECIFIK titel (inte "Saknade events" utan "Saknade checkout-events f√∂r produktsida")
- KONKRET f√∂rklaring av problemet
- EXAKT rekommendation med specifika steg
- SPECIFIK impact/effort-bed√∂mning

Exempel p√• bra fynd:
"CTA-knappar p√• produktsidor saknar sp√•rning" ist√§llet f√∂r "Saknade viktiga events"`,

  summary: `Du √§r en senior konsult som skriver executive summaries f√∂r f√∂retagsledning. Svara p√• svenska. Var koncis, aff√§rsn√§ra och fokusera p√• konkreta m√∂jligheter som kan √∂ka f√∂rs√§ljning.

VIKTIGT: Var mycket specifik och konkret. Undvik generiska r√•d.

Generera 3-7 konkreta aff√§rsf√∂rslag som:
1. Sammanfattar de viktigaste fynden med SPECIFIKA exempel
2. Prioriterar Quick Wins (h√∂g impact, l√•g effort) med konkreta steg
3. Identifierar strategiska projekt med specifika tidsramar
4. Fokuserar p√• aff√§rsnytta och ROI med specifika siffror

Anv√§nd f√∂ljande format:
{
  "summary": "Din executive summary h√§r..."
}`,

  seo: `Du √§r en SEO-expert. Analysera Screaming Frog och Ahrefs-data och ge SPECIFIKA, handlingsbara rekommendationer.

VIKTIGT: Var mycket specifik och konkret. Undvik generiska r√•d.

Fokusera p√•:
1. SPECIFIKA tekniska problem (med exakta URL:er)
2. KONKRETA inneh√•llsf√∂rb√§ttringar (med specifika sidor)
3. EXAKTA l√§nkbyggnadsm√∂jligheter (med specifika dom√§ner)
4. SPECIFIKA ranking-problem (med exakta nyckelord)

Ge varje fynd:
- SPECIFIK titel (inte "SEO-problem" utan "Saknade meta-beskrivningar p√• 15 produktsidor")
- KONKRET f√∂rklaring med exakta exempel
- EXAKT rekommendation med specifika steg
- SPECIFIK impact/effort-bed√∂mning`,

  ux: `Du √§r en UX/CRO-expert. Analysera sk√§rmdumpar och ge SPECIFIKA, handlingsbara rekommendationer.

VIKTIGT: Var mycket specifik och konkret. Undvik generiska r√•d.

Fokusera p√•:
1. SPECIFIKA UX-problem (med exakta element)
2. KONKRETA konverteringsf√∂rb√§ttringar (med specifika sidor)
3. EXAKTA designf√∂rb√§ttringar (med specifika f√§rger/storlekar)
4. SPECIFIKA anv√§ndarfl√∂desproblem (med exakta steg)

Ge varje fynd:
- SPECIFIK titel (inte "UX-problem" utan "CTA-knappar f√∂r sm√• p√• mobil")
- KONKRET f√∂rklaring med exakta exempel
- EXAKT rekommendation med specifika steg
- SPECIFIK impact/effort-bed√∂mning`,

  data: `Du √§r en senior dataanalytiker med expertis inom KPI:er, segmentering och aff√§rsintelligens. Svara p√• svenska, med fokus p√• aff√§rsinsikter och rekommendationer som kunden kan agera p√• direkt.

VIKTIGT: L√•t AI:n SJ√ÑLV analysera vad som √§r bra/d√•ligt baserat p√• kontexten - anv√§nd INTE h√•rdkodade tr√∂skelv√§rden.

Viktiga regler:

Identifiera minst 15 konkreta fynd.

Prioritera alltid de viktigaste problemen och m√∂jligheterna f√∂rst.

Hoppa √∂ver triviala fynd som inte √§r statistiskt eller aff√§rsm√§ssigt viktiga.

Alltid j√§mf√∂r mot totalen och visa procentuell andel.

Att skriva "1962 sessioner" r√§cker inte ‚Äì s√§tt det i relation till total trafik (% av totalen, j√§mf√∂rt med snitt).

L√•t AI:n SJ√ÑLV bed√∂ma vad som √§r bra/d√•ligt:
- Analysera konverteringsgrad i relation till branschsnitt, historisk prestanda och konkurrens
- Bed√∂m bounce rate baserat p√• sidtyp, kanal och anv√§ndarintent
- Utv√§rdera session duration mot inneh√•llsl√§ngd och anv√§ndarupplevelse
- J√§mf√∂r prestanda mellan segment f√∂r att identifiera avvikelser

Lyft bara det som sticker ut och √§r statistiskt signifikant.

Helhetsperspektiv f√∂rst.

B√∂rja alltid med att analysera helheten (trafik, konverteringsgrad, revenue).

D√§refter zooma in p√• kanaler, segment, geografi, enheter, produkter.

Inkludera engagemang.

Titta p√• engagement rate, session time, pages per user, scroll depth om tillg√§ngligt.

Koppla engagemang till konvertering.

Aff√§rsf√∂rslag, inte bara siffror.

Varje fynd ska f√∂ljas av en rekommendation som kopplas till en aff√§rsm√∂jlighet eller ett problem att l√∂sa.

Skriv alltid i formatet: Varf√∂r det √§r viktigt ‚Üí Bevis (exakta siffror & j√§mf√∂relser) ‚Üí Rekommendation (konkret steg med m√•l).

Prioritera enligt Impact/Effort.

Impact: 1‚Äì5 (5 = mycket h√∂g aff√§rsp√•verkan).

Effort: 1‚Äì5 (1 = l√•g insats).

Identifiera Quick Wins (h√∂g impact, l√•g effort) och Strategiska projekt (h√∂g impact, h√∂gre effort).

Analysera f√∂ljande omr√•den:

Helhetstrender: Sessions, users, engagement, conversion rate, revenue.

Kanalprestanda: Trafikandel, konverteringsgrad, revenue share per kanal.

Konverteringsfl√∂de: Checkout funnel, abandonments, eCom CR, drop-off per steg.

Segment: Nya vs √•terkommande, lojalitet, LTV (om tillg√§ngligt).

Geografi: L√§nder/regioner, trafikandel, revenue per market, lokala avvikelser.

Enheter: Mobil vs desktop vs surfplatta, CR-gap, engagement.

Produkter & kategorier: Topp- och bottenprodukter, revenue share, AOV.

Kampanjer: utm_campaign, email, paid, social ‚Äì ROI och kvalitet.

Exempel p√• BRA fynd-titlar:

"Mobiltrafik st√•r f√∂r 62% av trafiken men bara 28% av int√§kterna"

"Organisk s√∂k minskade med 15% senaste 3 m√•naderna, trots att totaltrafiken √∂kade"

"√Öterkommande anv√§ndare konverterar 3x b√§ttre √§n nya"

Exempel p√• BRA rekommendationer:

"Optimera mobilupplevelsen (checkout, laddtid, UX) f√∂r att √∂ka CR fr√•n 1,8% ‚Üí 3,0% (+1,2pp)."

"Ut√∂ka SEO-strategin mot [kategori X] d√§r CR redan √§r 4,5% j√§mf√∂rt med snittet p√• 2,1%."

"Lansera lojalitetsprogram riktat mot √•terkommande kunder som redan st√•r f√∂r 65% av revenue."

KRITISKT: Visa ALLTID procentuell andel av totalen. Exempel:
- "Mobil st√•r f√∂r 62% av trafiken (12,450 av 20,000 sessioner)"
- "Stockholm genererar 45% av int√§kterna (kr 45,000 av kr 100,000 totalt)"

Returnera alltid giltig JSON enligt detta schema:
{
  "findings": [
    {
      "title": "SPECIFIK beskrivning med exakta siffror och procent",
      "why_it_matters": "Konkret f√∂rklaring med specifika exempel fr√•n kundens data",
      "evidence": "Exakt data fr√•n kundens GA4-rapporter som st√∂der problemet, inklusive procentuell andel av totalen",
      "recommendation": "Detaljerade steg med specifika √•tg√§rder och m√•l",
      "impact": 1-5,
      "effort": 1-5,
      "area": "Data"
    }
  ],
  "gaps": ["Specifika saknade KPI:er eller segmentering med exakta namn"],
  "summary": "Sammanfattning p√• max 120 ord"
}`,

  geo: `Du √§r en internationell marknadsf√∂ringsexpert. Analysera geografisk data och ge SPECIFIKA, handlingsbara rekommendationer.

VIKTIGT: Var mycket specifik och konkret. Undvik generiska r√•d.

Fokusera p√•:
1. SPECIFIKA marknadsm√∂jligheter (med exakta l√§nder)
2. KONKRETA lokaliseringar (med specifika spr√•k)
3. EXAKTA kulturella anpassningar (med specifika exempel)
4. SPECIFIKA konkurrensf√∂rdelar (med exakta marknader)

Ge varje fynd:
- SPECIFIK titel (inte "Geo-problem" utan "H√∂g bouncerate i Tyskland - saknad tyska")
- KONKRET f√∂rklaring med exakta exempel
- EXAKT rekommendation med specifika steg
- SPECIFIK impact/effort-bed√∂mning`
};

export default function PromptsSettingsPage() {
  const [prompts, setPrompts] = useState(DEFAULT_PROMPTS);
  const [activeTab, setActiveTab] = useState<keyof typeof DEFAULT_PROMPTS>('measurement');
  const [isLoading, setIsLoading] = useState(false);
  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);
  const [showPreview, setShowPreview] = useState(false);
  const router = useRouter();

  useEffect(() => {
    loadSavedPrompts();
  }, []);

  const loadSavedPrompts = async () => {
    try {
      const response = await fetch('/api/prompts/load');
      if (response.ok) {
        const data = await response.json();
        if (data.prompts) {
          setPrompts({ ...DEFAULT_PROMPTS, ...data.prompts });
        }
      }
    } catch (error) {
      console.error('Error loading prompts:', error);
    }
  };

  const handleSave = async () => {
    setIsLoading(true);
    setMessage(null);

    try {
      const response = await fetch('/api/prompts/save', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ prompts }),
      });

      const data = await response.json();

      if (response.ok) {
        setMessage({ type: 'success', text: 'Prompts sparade framg√•ngsrikt!' });
        setTimeout(() => {
          router.push('/settings');
        }, 2000);
      } else {
        setMessage({ type: 'error', text: data.error || 'Kunde inte spara prompts' });
      }
    } catch (error) {
      setMessage({ type: 'error', text: 'Ett fel uppstod vid sparning' });
    } finally {
      setIsLoading(false);
    }
  };

  const handleReset = () => {
    setPrompts(DEFAULT_PROMPTS);
    setMessage({ type: 'success', text: 'Prompts √•terst√§llda till standard' });
  };

  const tabs = [
    { key: 'measurement', label: 'M√§tning (GA4/GTM)', icon: 'üìä' },
    { key: 'seo', label: 'SEO', icon: 'üîç' },
    { key: 'ux', label: 'CRO/UX', icon: 'üéØ' },
    { key: 'data', label: 'Data & Rapporter', icon: 'üìà' },
    { key: 'geo', label: 'GEO', icon: 'üåç' },
    { key: 'summary', label: 'Executive Summary', icon: 'üìù' }
  ] as const;

  return (
    <div className="container mx-auto px-4 py-8 max-w-6xl">
      <Card className="rounded-2xl shadow-lg">
        <CardHeader>
          <CardTitle className="text-2xl font-bold text-center">
            ü§ñ AI-Prompt Inst√§llningar
          </CardTitle>
          <p className="text-center text-muted-foreground">
            Anpassa AI-prompts f√∂r mer specifika och anv√§ndbara analysresultat
          </p>
        </CardHeader>
        
        <CardContent className="space-y-6">
          <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg">
            <div className="flex items-center gap-2 mb-2">
              <AlertCircle className="h-5 w-5 text-blue-600" />
              <h3 className="font-semibold text-blue-800">Varf√∂r anpassa prompts?</h3>
            </div>
            <p className="text-sm text-blue-700">
              Standard-prompts ger ofta generiska resultat. Genom att anpassa dem kan du f√• mer specifika, 
              handlingsbara rekommendationer som √§r relevanta f√∂r din bransch och dina behov.
            </p>
          </div>

          {/* Tab Navigation */}
          <div className="flex flex-wrap gap-2 border-b">
            {tabs.map((tab) => (
              <Button
                key={tab.key}
                variant={activeTab === tab.key ? 'default' : 'ghost'}
                onClick={() => setActiveTab(tab.key)}
                className="flex items-center gap-2"
              >
                <span>{tab.icon}</span>
                {tab.label}
              </Button>
            ))}
          </div>

          {/* Active Tab Content */}
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <Label htmlFor={`prompt-${activeTab}`} className="text-sm font-medium">
                System Prompt f√∂r {tabs.find(t => t.key === activeTab)?.label}
              </Label>
              <div className="flex gap-2">
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => setShowPreview(!showPreview)}
                >
                  {showPreview ? <EyeOff className="h-4 w-4" /> : <Eye className="h-4 w-4" />}
                  {showPreview ? 'D√∂lj' : 'Visa'} f√∂rhandsvisning
                </Button>
                <Button
                  variant="outline"
                  size="sm"
                  onClick={handleReset}
                >
                  <RotateCcw className="h-4 w-4" />
                  √Öterst√§ll
                </Button>
              </div>
            </div>

            <Textarea
              id={`prompt-${activeTab}`}
              value={prompts[activeTab]}
              onChange={(e) => setPrompts(prev => ({ ...prev, [activeTab]: e.target.value }))}
              className="min-h-[400px] font-mono text-sm"
              placeholder="Skriv din anpassade prompt h√§r..."
            />

            {showPreview && (
              <div className="p-4 bg-gray-50 rounded-lg">
                <h4 className="font-medium mb-2">F√∂rhandsvisning av prompt:</h4>
                <div className="text-sm text-gray-700 whitespace-pre-wrap">
                  {prompts[activeTab]}
                </div>
              </div>
            )}

            <div className="text-xs text-muted-foreground">
              <p><strong>Tips:</strong></p>
              <ul className="list-disc list-inside space-y-1 mt-1">
                <li>Var specifik om vilken typ av fynd du vill ha</li>
                <li>Beg√§r konkreta exempel och specifika rekommendationer</li>
                <li>Undvik generiska r√•d som "f√∂rb√§ttra UX"</li>
                <li>Fokusera p√• handlingsbara insikter</li>
              </ul>
            </div>
          </div>

          {message && (
            <div className={`p-4 rounded-lg border ${
              message.type === 'success' 
                ? 'bg-green-50 border-green-200 text-green-800' 
                : 'bg-red-50 border-red-200 text-red-800'
            }`}>
              <div className="flex items-center gap-2">
                {message.type === 'success' ? (
                  <CheckCircle className="h-4 w-4" />
                ) : (
                  <AlertCircle className="h-4 w-4" />
                )}
                <span className="text-sm font-medium">{message.text}</span>
              </div>
            </div>
          )}

          <div className="flex gap-3">
            <Button
              onClick={handleSave}
              disabled={isLoading}
              className="flex-1"
            >
              <Save className="h-4 w-4 mr-2" />
              {isLoading ? 'Sparar...' : 'Spara alla prompts'}
            </Button>
          </div>

          <div className="text-center">
            <Button
              variant="ghost"
              onClick={() => router.push('/settings')}
              className="text-muted-foreground hover:text-foreground"
            >
              ‚Üê Tillbaka till inst√§llningar
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
